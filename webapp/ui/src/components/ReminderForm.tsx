import React, { useState } from "react";

type TypeKey = "sugar" | "insulin" | "meal";
const TYPES: Record<TypeKey, { label: string; emoji: string }> = {
  sugar:   { label: "–°–∞—Ö–∞—Ä",   emoji: "ü©∏" },
  insulin: { label: "–ò–Ω—Å—É–ª–∏–Ω", emoji: "üíâ" },
  meal:    { label: "–ü—Ä–∏—ë–º –ø–∏—â–∏", emoji: "üçΩÔ∏è" },
};

export default function ReminderForm(props: {
  onSubmit: (data: { type: TypeKey; title: string; time: string; interval: number }) => void;
  onCancel?: () => void;
}) {
  const [type, setType] = useState<TypeKey>("sugar");
  const [title, setTitle] = useState("");
  const [time, setTime] = useState("12:30");
  const [interval, setInterval] = useState(60);

  return (
    <form
      onSubmit={(e) => {
        e.preventDefault();
        props.onSubmit({ type, title, time, interval });
      }}
      style={{ marginTop: 8 }}
    >
      <h2>–ù–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</h2>

      {/* –¢–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –≤–∏–¥–µ —Å–µ–≥–º–µ–Ω—Ç–∞ (–∫–æ–º–ø–∞–∫—Ç–Ω–æ, –≤–ª–µ–∑–∞–µ—Ç –Ω–∞ —ç–∫—Ä–∞–Ω) */}
      <div className="segment" role="tablist" aria-label="–¢–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è">
        {Object.entries(TYPES).map(([key, v]) => (
          <button
            key={key}
            type="button"
            className="chip"
            data-active={type === key}
            onClick={() => setType(key as TypeKey)}
            aria-pressed={type === key}
          >
            <span className="emoji">{v.emoji}</span>
            <span>{v.label}</span>
          </button>
        ))}
      </div>

      <label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
      <input
        id="title"
        className="input"
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å–∞—Ö–∞—Ä–∞"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
        maxLength={40}
      />

      <div className="form-grid">
        <div>
          <label htmlFor="time">–í—Ä–µ–º—è</label>
          <input id="time" className="input" type="time" value={time} onChange={(e)=>setTime(e.target.value)} />
        </div>
        <div>
          <label htmlFor="interval">–ò–Ω—Ç–µ—Ä–≤–∞–ª (–º–∏–Ω)</label>
          <input
            id="interval"
            className="input"
            type="number"
            min={5}
            step={5}
            value={interval}
            onChange={(e)=>setInterval(Number(e.target.value))}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 60"
          />
        </div>
      </div>

      <div className="actions-row">
        <button className="btn-primary" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button className="btn-ghost" type="button" onClick={props.onCancel}>–û—Ç–º–µ–Ω–∞</button>
      </div>
    </form>
  );
}
